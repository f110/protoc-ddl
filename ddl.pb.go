// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: ddl.proto

package ddl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Columns       []string               `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Unique        bool                   `protobuf:"varint,3,opt,name=unique,proto3" json:"unique,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexOption) Reset() {
	*x = IndexOption{}
	mi := &file_ddl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexOption) ProtoMessage() {}

func (x *IndexOption) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexOption.ProtoReflect.Descriptor instead.
func (*IndexOption) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{0}
}

func (x *IndexOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexOption) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *IndexOption) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type ColumnOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      bool                   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Null          bool                   `protobuf:"varint,2,opt,name=null,proto3" json:"null,omitempty"`
	Default       string                 `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Unique        bool                   `protobuf:"varint,6,opt,name=unique,proto3" json:"unique,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnOptions) Reset() {
	*x = ColumnOptions{}
	mi := &file_ddl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOptions) ProtoMessage() {}

func (x *ColumnOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOptions.ProtoReflect.Descriptor instead.
func (*ColumnOptions) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{1}
}

func (x *ColumnOptions) GetSequence() bool {
	if x != nil {
		return x.Sequence
	}
	return false
}

func (x *ColumnOptions) GetNull() bool {
	if x != nil {
		return x.Null
	}
	return false
}

func (x *ColumnOptions) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *ColumnOptions) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ColumnOptions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ColumnOptions) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type TableOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	PrimaryKey    []string               `protobuf:"bytes,2,rep,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	Indexes       []*IndexOption         `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	Engine        string                 `protobuf:"bytes,4,opt,name=engine,proto3" json:"engine,omitempty"`
	WithTimestamp bool                   `protobuf:"varint,5,opt,name=with_timestamp,json=withTimestamp,proto3" json:"with_timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableOptions) Reset() {
	*x = TableOptions{}
	mi := &file_ddl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOptions) ProtoMessage() {}

func (x *TableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOptions.ProtoReflect.Descriptor instead.
func (*TableOptions) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{2}
}

func (x *TableOptions) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableOptions) GetPrimaryKey() []string {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *TableOptions) GetIndexes() []*IndexOption {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *TableOptions) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *TableOptions) GetWithTimestamp() bool {
	if x != nil {
		return x.WithTimestamp
	}
	return false
}

type QueryOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOption) Reset() {
	*x = QueryOption{}
	mi := &file_ddl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOption) ProtoMessage() {}

func (x *QueryOption) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOption.ProtoReflect.Descriptor instead.
func (*QueryOption) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{3}
}

func (x *QueryOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryOption) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type DAOOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queries       []*QueryOption         `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DAOOptions) Reset() {
	*x = DAOOptions{}
	mi := &file_ddl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DAOOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DAOOptions) ProtoMessage() {}

func (x *DAOOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DAOOptions.ProtoReflect.Descriptor instead.
func (*DAOOptions) Descriptor() ([]byte, []int) {
	return file_ddl_proto_rawDescGZIP(), []int{4}
}

func (x *DAOOptions) GetQueries() []*QueryOption {
	if x != nil {
		return x.Queries
	}
	return nil
}

var file_ddl_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*TableOptions)(nil),
		Field:         60000,
		Name:          "dev.f110.ddl.table",
		Tag:           "bytes,60000,opt,name=table",
		Filename:      "ddl.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*DAOOptions)(nil),
		Field:         60001,
		Name:          "dev.f110.ddl.dao",
		Tag:           "bytes,60001,opt,name=dao",
		Filename:      "ddl.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ColumnOptions)(nil),
		Field:         60000,
		Name:          "dev.f110.ddl.column",
		Tag:           "bytes,60000,opt,name=column",
		Filename:      "ddl.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional dev.f110.ddl.TableOptions table = 60000;
	E_Table = &file_ddl_proto_extTypes[0]
	// optional dev.f110.ddl.DAOOptions dao = 60001;
	E_Dao = &file_ddl_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional dev.f110.ddl.ColumnOptions column = 60000;
	E_Column = &file_ddl_proto_extTypes[2]
)

var File_ddl_proto protoreflect.FileDescriptor

const file_ddl_proto_rawDesc = "" +
	"\n" +
	"\tddl.proto\x12\fdev.f110.ddl\x1a google/protobuf/descriptor.proto\"S\n" +
	"\vIndexOption\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acolumns\x18\x02 \x03(\tR\acolumns\x12\x16\n" +
	"\x06unique\x18\x03 \x01(\bR\x06unique\"\x99\x01\n" +
	"\rColumnOptions\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\bR\bsequence\x12\x12\n" +
	"\x04null\x18\x02 \x01(\bR\x04null\x12\x18\n" +
	"\adefault\x18\x03 \x01(\tR\adefault\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x16\n" +
	"\x06unique\x18\x06 \x01(\bR\x06unique\"\xc2\x01\n" +
	"\fTableOptions\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1f\n" +
	"\vprimary_key\x18\x02 \x03(\tR\n" +
	"primaryKey\x123\n" +
	"\aindexes\x18\x03 \x03(\v2\x19.dev.f110.ddl.IndexOptionR\aindexes\x12\x16\n" +
	"\x06engine\x18\x04 \x01(\tR\x06engine\x12%\n" +
	"\x0ewith_timestamp\x18\x05 \x01(\bR\rwithTimestamp\"7\n" +
	"\vQueryOption\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"A\n" +
	"\n" +
	"DAOOptions\x123\n" +
	"\aqueries\x18\x01 \x03(\v2\x19.dev.f110.ddl.QueryOptionR\aqueries:S\n" +
	"\x05table\x12\x1f.google.protobuf.MessageOptions\x18\xe0\xd4\x03 \x01(\v2\x1a.dev.f110.ddl.TableOptionsR\x05table:M\n" +
	"\x03dao\x12\x1f.google.protobuf.MessageOptions\x18\xe1\xd4\x03 \x01(\v2\x18.dev.f110.ddl.DAOOptionsR\x03dao:T\n" +
	"\x06column\x12\x1d.google.protobuf.FieldOptions\x18\xe0\xd4\x03 \x01(\v2\x1b.dev.f110.ddl.ColumnOptionsR\x06columnB\x1cZ\x1ago.f110.dev/protoc-ddl;ddlb\x06proto3"

var (
	file_ddl_proto_rawDescOnce sync.Once
	file_ddl_proto_rawDescData []byte
)

func file_ddl_proto_rawDescGZIP() []byte {
	file_ddl_proto_rawDescOnce.Do(func() {
		file_ddl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ddl_proto_rawDesc), len(file_ddl_proto_rawDesc)))
	})
	return file_ddl_proto_rawDescData
}

var file_ddl_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ddl_proto_goTypes = []any{
	(*IndexOption)(nil),                 // 0: dev.f110.ddl.IndexOption
	(*ColumnOptions)(nil),               // 1: dev.f110.ddl.ColumnOptions
	(*TableOptions)(nil),                // 2: dev.f110.ddl.TableOptions
	(*QueryOption)(nil),                 // 3: dev.f110.ddl.QueryOption
	(*DAOOptions)(nil),                  // 4: dev.f110.ddl.DAOOptions
	(*descriptorpb.MessageOptions)(nil), // 5: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 6: google.protobuf.FieldOptions
}
var file_ddl_proto_depIdxs = []int32{
	0, // 0: dev.f110.ddl.TableOptions.indexes:type_name -> dev.f110.ddl.IndexOption
	3, // 1: dev.f110.ddl.DAOOptions.queries:type_name -> dev.f110.ddl.QueryOption
	5, // 2: dev.f110.ddl.table:extendee -> google.protobuf.MessageOptions
	5, // 3: dev.f110.ddl.dao:extendee -> google.protobuf.MessageOptions
	6, // 4: dev.f110.ddl.column:extendee -> google.protobuf.FieldOptions
	2, // 5: dev.f110.ddl.table:type_name -> dev.f110.ddl.TableOptions
	4, // 6: dev.f110.ddl.dao:type_name -> dev.f110.ddl.DAOOptions
	1, // 7: dev.f110.ddl.column:type_name -> dev.f110.ddl.ColumnOptions
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	2, // [2:5] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ddl_proto_init() }
func file_ddl_proto_init() {
	if File_ddl_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ddl_proto_rawDesc), len(file_ddl_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_ddl_proto_goTypes,
		DependencyIndexes: file_ddl_proto_depIdxs,
		MessageInfos:      file_ddl_proto_msgTypes,
		ExtensionInfos:    file_ddl_proto_extTypes,
	}.Build()
	File_ddl_proto = out.File
	file_ddl_proto_goTypes = nil
	file_ddl_proto_depIdxs = nil
}
